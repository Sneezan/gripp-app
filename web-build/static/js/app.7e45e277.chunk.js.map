{"version":3,"sources":["reducers/user.js","components/ButtonStyles.js","screens/Welcome.js","utils/utils.js","components/InputStyles.js","components/TextStyles.js","screens/LogIn.js","screens/Register.js","components/ProfileCard.js","screens/StartPage.js","screens/GamePage.js","App.js","assets/front.png"],"names":["user","createSlice","name","initialState","error","username","userId","accessToken","userCreatedAt","email","reducers","setMember","store","action","payload","setUsername","setEmail","setError","setUserId","setAccessToken","ActionBtn","styled","TouchableOpacity","ActionBtnTxt","Text","AlternativeBtn","AlternativeBtnTxt","ButtonWrap","View","Welcome","navigation","style","styles","container","ImageBackground","resizeMode","source","require","image","textcontainer","textmanipulate","StyledText","manipulate","other","onPress","navigate","StatusBar","StyleSheet","create","flex","alignItems","justifyContent","marginTop","paddingTop","marginLeft","width","flexDirection","API_URL","slug","BASE_URL","LogInput","TextInput","Header","Requirement","HeaderComponent","LogIn","useState","hidePassword","setHidePassword","password","setPassword","dispatch","useDispatch","useSelector","useEffect","passwordInputRef","createRef","onFormSubmit","event","preventDefault","options","method","headers","body","JSON","stringify","fetch","then","response","json","data","success","batch","actions","id","alert","KeyboardAvoidingView","behavior","ScrollView","keyboardShouldPersistTaps","SectionStyle","placeholder","placeholderTextColor","autoCapitalize","value","onChangeText","returnKeyType","onSubmitEditing","current","focus","underlineColorAndroid","blurOnSubmit","keyboardType","keyboardAppearance","MaterialIcons","size","emailIcon","ref","secureTextEntry","Keyboard","dismiss","Feather","color","lockIcon","Octicons","eyeIcon","type","height","backgroundColor","zIndex","position","left","bottom","right","paddingBottom","Register","userIcon","length","doneIcon","ProfileCard","userName","userCreated","date","formatRelative","Date","Card","ProfileWrap","TextWrap","Line","Member","StartPage","setProfile","res","StartBtn","SignOutBtn","BtnTxt","GamePage","statements","setStatement","catch","cards","cardIndex","infinite","showSecondCard","disableBottomSwipe","disableTopSwipe","stackSize","animateCardOpacity","stackAnimationFriction","renderCard","card","wrap","CardStyle","text","statement","BrandText","Stack","createNativeStackNavigator","reducer","combineReducers","configureStore","App","NavigationContainer","Navigator","screenOptions","headerStyle","borderBottomWidth","headerTintColor","headerTitleStyle","fontWeight","Screen","component","title","module","exports"],"mappings":"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","file":"static/js/app.7e45e277.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst user = createSlice({\n   name:\"user\",\n   initialState:{\n       error: null,\n       username: null,\n       userId: null,\n       accessToken: null,\n       userCreatedAt: null,\n       email: null,\n   },\n   reducers: {\n       setMember: (store, action) => {\n           store.userCreatedAt = action.payload;\n       },\n       setUsername: (store, action) => {\n           store.username = action.payload;\n       },\n       setEmail: (store, action) => {\n           store.email = action.payload;\n       },\n       setError: (store, action) => {\n           store.error = action.payload;\n       },\n       setUserId: (store, action) => {\n           store.userId = action.payload;\n       },\n       setAccessToken: (store, action) => {\n           store.accessToken = action.payload;\n       }\n   }\n});\nexport default user;","import styled from 'styled-components/native';\n\nexport const ActionBtn = styled.TouchableOpacity`\nborder: 2px solid #F4F2F2;\nwidth: 300px;\nbackground-color: #F4F2F2;\nborder-radius: 12px;\nmargin: 10px;\nmargin-top: 20px;\n`\nexport const ActionBtnTxt = styled.Text`\nfont-size: 20px;\nfont-weight: 500;\ntext-align: center;\ncolor: #2D2929;\ntext-transform: uppercase;\npadding: 8px;\n`\nexport const AlternativeBtn = styled.TouchableOpacity`\nborder: 2px solid #F4F2F2;\nwidth: 300px;\nborder-radius: 12px;\nmargin: 10px;\n`\nexport const AlternativeBtnTxt = styled.Text`\nfont-size: 20px;\nfont-weight: 500;\ntext-align: center;\ncolor: white;\ntext-transform: uppercase;\npadding: 8px;\n`\n\nexport const ButtonWrap = styled.View`\nmargin-top: 20px;\n`","import React from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, View,  ImageBackground } from 'react-native';\nimport styled from 'styled-components/native'\nimport { ActionBtn, ActionBtnTxt, AlternativeBtn, AlternativeBtnTxt } from '../components/ButtonStyles';\n\nexport const Welcome = ({navigation}) => {\n  return (\n    <View style={styles.container}>\n      <ImageBackground resizeMode={'cover'} source={require('../assets/front.png')}\n          style={styles.image} >\n            <View style={styles.textcontainer}> \n             <View style={styles.textmanipulate}> \n              <Text>Start</Text>\n              <StyledText>or end</StyledText>\n              <Text>conversation</Text>\n             </View>\n            </View> \n   <View style={styles.manipulate}>\n      <View style={styles.other}>\n           <ActionBtn onPress={() => navigation.navigate('Log in')}>\n             <ActionBtnTxt>Log in</ActionBtnTxt>\n          </ActionBtn>\n          <AlternativeBtn onPress={() => navigation.navigate('Register')}>\n             <AlternativeBtnTxt>Sign Up</AlternativeBtnTxt>\n          </AlternativeBtn>\n      </View>\n   </View>\n\n      <StatusBar style=\"auto\" />\n     </ImageBackground>\n    </View>\n  );\n}\n\nconst Text = styled.Text`\ncolor: #F4F2F2;\nfont-size: 55px;\nfont-family: 'Times New Roman';\nline-height: 55px;\n`\nconst StyledText = styled.Text`\ncolor: #F4F2F2;\nfont-size: 55px;\nfont-family: 'Times New Roman';\nfont-style: italic;\nline-height: 50px;\n`\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  textcontainer:{\n   marginTop: 250,\n   paddingTop: 20,\n   alignItems: 'center',\n  },\n  textmanipulate:{\n    marginLeft: 30,\n    width: 350,\n  },\n  other:{\n    marginTop: 0,\n  },\n  manipulate:{\n    alignItems: 'center',\n    justifyContent: 'center',\n    \n  },\n   image: {\n        flex: 1,\n        resizeMode: 'cover',\n        width: \"100%\",\n        flexDirection: 'column',\n\n  }\n});\n\nconst NativeButton = styled.TouchableOpacity`\nbackground-color: none;\nborder-radius: 10px;\nwidth: 110px;\ntext-align: center;\nheight: 40px;\nmargin: 10px;\nborder: 2px solid #F4F2F2;\n`\n\nconst BtnTxt = styled.Text`\nfont-size: 30px;\ntext-align: center;\ncolor: #F4F2F2;\n`","const BASE_URL = \"http://localhost:8080\";\n\nexport const API_URL = (slug) => `${BASE_URL}/${slug}`;\n\n// \"http://localhost:8080\"; ","\n\nimport styled from 'styled-components/native'\n\nexport const LogInput = styled.TextInput`\n padding: 10px;\n margin: 8px;\n font-weight:600;\n font-size: 18px;\n width: 300px;\n color: white;\n padding-left: 50px;\n border-bottom-width: 1.5px;\n border-color: #ffff;\n`","import styled from 'styled-components/native';\n\n/* Text styles*/ \nexport const Text = styled.Text`\ncolor: #F4F2F2;\nfont-size: 20px; \nmargin: 10px;\ntext-align: center;\n`\nexport const Header = styled.Text`\nfont-size: 36px;\ncolor: #F4F2F2;\n`\n/* special texts */\nexport const StyledText = styled.Text`\ncolor: #F4F2F2; \nfont-style: italic;\nfont-family: 'Times New Roman';\n`\nexport const Requirement = styled.Text`\ncolor: #F4F2F2; \nfont-size: 12px;\ntext-align: center;\n`\n\nexport const HeaderComponent = styled.View`\ntext-align: center;\nmargin-bottom: 50px;\nmargin-top: 20%;\n`","\nimport React, {useEffect, useState, createRef} from \"react\";\nimport { useDispatch, useSelector, batch } from \"react-redux\"\n//import { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, View, TouchableOpacity, KeyboardAvoidingView, Keyboard, ScrollView} from 'react-native';\nimport { API_URL } from \"../utils/utils.js\";\nimport user from \"../reducers/user.js\";''\nimport { LogInput } from \"../components/InputStyles.js\";\nimport { ActionBtn, ActionBtnTxt, AlternativeBtn, AlternativeBtnTxt, ButtonWrap } from \"../components/ButtonStyles.js\";\nimport { Text, Header, StyledText, HeaderComponent, Requirement } from \"../components/TextStyles.js\";\nimport  { Octicons }  from '@expo/vector-icons'\nimport { MaterialIcons } from '@expo/vector-icons'; \nimport { Feather } from '@expo/vector-icons'; \n\nexport const LogIn = ({navigation}) => {\n  const [hidePassword, setHidePassword] = useState(true)\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const dispatch = useDispatch();\n  const accessToken = useSelector((store) => store.user.accessToken);\n  const error = useSelector((store) => store.user.error)\n\n  useEffect(() => {\n      if (accessToken) {navigation.navigate('StartPage')}  // Auth Navigation Works!!\n  }, [accessToken])\n  \n  const showPassword = () => {\n    setHidePassword(!hidePassword)\n  }\n\n  const passwordInputRef = createRef();\n\n  const onFormSubmit =(event) => {\n      event.preventDefault();\n      const options = {\n          method: \"POST\",\n          headers: {\n              \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({email: email, password: password })\n      }\n      fetch(API_URL('login'), options)\n          .then(response => response.json())\n          .then(data => {\n              if(data.success) {\n              //  alert(\"Logged IN! \");\n                  batch(()=> {\n                      dispatch(user.actions.setUsername(data.response.username));\n                      dispatch(user.actions.setEmail(data.response.email));\n                      dispatch(user.actions.setMember(data.response.userCreatedAt));\n                      dispatch(user.actions.setUserId(data.response.id))\n                      dispatch(user.actions.setAccessToken(data.response.accessToken));\n                      dispatch(user.actions.setError(null));\n                  });\n              } else {\n                  alert(\"error, could not find user - make sure you've registered and that the password is correct \");\n                  batch (() => {\n                      dispatch(user.actions.setUsername(null));\n                      dispatch(user.actions.setEmail(null));\n                      dispatch(user.actions.setMember(null));\n                      dispatch(user.actions.setUserId(null))\n                      dispatch(user.actions.setAccessToken(null));\n                      dispatch(user.actions.setError(data.response));\n                  });\n              }\n          })\n  }\n\n  return (\n    <KeyboardAvoidingView\n    behavior=\"padding\"\n    style={styles.container}\n  >\n    <ScrollView keyboardShouldPersistTaps=\"handled\">\n    <View style={styles.container} onPress={(onFormSubmit)}>\n      <HeaderComponent>\n         <Header>Ready to get a <StyledText>gripp?</StyledText></Header> \n         <Text> LOG INTO YOUR ACCOUNT </Text> \n      </HeaderComponent>\n    <View style={styles.SectionStyle} >\n              <LogInput\n                placeholder=\"Enter email\" \n                placeholderTextColor=\"#F4F2F2\" \n                autoCapitalize=\"none\"\n                value={email} \n                onChangeText={setEmail}\n                returnKeyType=\"next\"\n                onSubmitEditing={() => passwordInputRef.current &&  passwordInputRef.current.focus()}\n                underlineColorAndroid=\"#f000\"\n                blurOnSubmit={false}\n                keyboardType='email-address'\n                keyboardAppearance='dark'\n              /> \n              <MaterialIcons name=\"alternate-email\" size={24} style={styles.emailIcon} />\n              <View style={{width:100}}>\n              <LogInput \n                placeholder=\"Enter password\" \n                placeholderTextColor=\"#F4F2F2\" \n                autoCapitalize='none'\n                ref={passwordInputRef}\n                secureTextEntry={hidePassword === true ? true : false}\n                value={password} \n                blurOnSubmit={false}\n                onChangeText={setPassword}\n                underlineColorAndroid=\"#f000\"\n                returnKeyType=\"next\" \n                keyboardAppearance='dark'\n                onPress={Keyboard.dismiss}\n              /> \n                </View>\n            \n               <Feather name=\"lock\" size={24} color=\"black\" style={styles.lockIcon} />\n               <TouchableOpacity onPress={showPassword}>\n                  <Octicons\n                    name={hidePassword === true ? 'eye-closed' : 'eye'}\n                    size={20}\n                    style={styles.eyeIcon}\n                  />\n                </TouchableOpacity>\n            </View>\n            {error && (<Requirement>{error}</Requirement>)} \n            <ButtonWrap>           \n            <ActionBtn \n             onPress={(onFormSubmit)}\n             type=\"submit\"><ActionBtnTxt>get a gripp</ActionBtnTxt></ActionBtn>\n             <AlternativeBtn \n             onPress={() => navigation.navigate('Register')}\n             type=\"submit\"><AlternativeBtnTxt>join here</AlternativeBtnTxt></AlternativeBtn>\n            </ButtonWrap>\n    </View>\n     </ScrollView>\n     <View style={{ height:60 }} />\n    </KeyboardAvoidingView>\n  );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      backgroundColor: '#7b1930',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    lockIcon: {\n      color: '#F4F2F2',\n      zIndex: 1,\n      position: 'absolute',\n      left: 20,\n      bottom: 68,\n    },\n    emailIcon: {\n      color: '#F4F2F2',\n      zIndex: 1,\n      position: 'absolute',\n      left: 20,\n      bottom: 125,\n    },\n    eyeIcon: {\n      color: '#F4F2F2',\n      zIndex: 1,\n      position: 'absolute',\n      right: 25,\n      bottom: 20,\n    },\n    SectionStyle: {\n      paddingTop: 5 + '%',\n      paddingBottom: 50,\n    }\n  });\n  \n\n","\nimport React, {useEffect, useState, createRef} from \"react\";\nimport { useDispatch, useSelector, batch } from \"react-redux\"\n//import { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, View, ScrollView, KeyboardAvoidingView, TouchableOpacity} from 'react-native';\nimport { API_URL } from \"../utils/utils.js\";\nimport user from \"../reducers/user.js\";\nimport { Feather } from '@expo/vector-icons';\nimport { Text, Header, HeaderComponent, Requirement } from \"../components/TextStyles.js\";\n\nimport { ActionBtn, ActionBtnTxt, AlternativeBtn, AlternativeBtnTxt, ButtonWrap } from \"../components/ButtonStyles.js\";\nimport { MaterialIcons } from '@expo/vector-icons'; \nimport  { Octicons }  from '@expo/vector-icons'\nimport { LogInput } from \"../components/InputStyles.js\";\n\nexport const Register = ({navigation}) => {\n  const [hidePassword, setHidePassword] = useState(true)\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  \n  const dispatch = useDispatch();\n  const accessToken = useSelector((store) => store.user.accessToken);\n  const error = useSelector((store) => store.user.error)\n  const showPassword = () => {\n    setHidePassword(!hidePassword)\n  }\n\n  useEffect(() => {\n      if (accessToken) {navigation.navigate('StartPage')}  // Auth Navigation Works!!\n  }, [accessToken])\n\n  const passwordInputRef = createRef();\n\n  const onFormSubmit =(event) => {\n      event.preventDefault();\n      const options = {\n          method: \"POST\",\n          headers: {\n              \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({username: username, email: email, password: password })\n      }\n      fetch(API_URL('register'), options)\n          .then(response => response.json())\n          .then(data => {\n              if(data.success) {\n             //  alert(\"Registered! \");\n                  batch(()=> {\n                      dispatch(user.actions.setUsername(data.response.username));\n                      dispatch(user.actions.setEmail(data.response.email));\n                      dispatch(user.actions.setUserId(data.response.id));\n                      dispatch(user.actions.setMember(data.response.userCreatedAt));\n                      dispatch(user.actions.setAccessToken(data.response.accessToken));\n                      dispatch(user.actions.setError(null));\n                  });\n              } else {\n                  //alert(\"error, could not register - the email already exists \");\n                  batch (() => {\n                      dispatch(user.actions.setUsername(null));\n                      dispatch(user.actions.setEmail(null));\n                      dispatch(user.actions.setUserId(null));\n                      dispatch(user.actions.setMember(data.response.userCreatedAt));\n                      dispatch(user.actions.setAccessToken(null));\n                      dispatch(user.actions.setError(data.response));\n                  });\n              }\n          })\n  }\n\n\n  return (\n    <KeyboardAvoidingView\n    behavior=\"padding\"\n    style={styles.container}\n  >\n    <ScrollView keyboardShouldPersistTaps=\"handled\">\n    <View style={styles.container} onPress={(onFormSubmit)}>\n      <HeaderComponent>\n         <Header>Not part of the club?</Header> \n         <Text> CREATE AN ACCOUNT </Text> \n      </HeaderComponent>\n    <View style={styles.SectionStyle} keyboardAppearance='dark'>\n    <Feather name=\"user\" size={24} style={styles.userIcon} />\n               <LogInput \n                placeholder=\"What shall we call you?\" \n                autoCapitalize=\"none\"\n                value={username} \n                onChangeText={setUsername}\n                placeholderTextColor=\"#F4F2F2\" \n                returnKeyType=\"next\"\n                onSubmitEditing={() => passwordInputRef.current &&  passwordInputRef.current.focus()}\n                underlineColorAndroid=\"#f000\"\n                blurOnSubmit={false}\n                /> \n               \n               <MaterialIcons name=\"alternate-email\" size={24} style={styles.emailIcon} />\n              <LogInput \n                placeholder=\"Enter email\" \n                autoCapitalize=\"none\"\n                value={email} \n                onChangeText={setEmail}\n                placeholderTextColor=\"#F4F2F2\" \n                returnKeyType=\"next\"\n                onSubmitEditing={() => passwordInputRef.current &&  passwordInputRef.current.focus()}\n                underlineColorAndroid=\"#f000\"\n                blurOnSubmit={false}/> \n    <Feather name=\"lock\" size={24} color=\"black\" style={styles.lockIcon} />\n              <LogInput \n                placeholder=\"Select password\" \n                ref={passwordInputRef}\n                value={password} \n                blurOnSubmit={false}\n                placeholderTextColor=\"#F4F2F2\" \n                secureTextEntry={hidePassword === true ? true : false}\n                onChangeText={setPassword}\n                underlineColorAndroid=\"#f000\"\n                returnKeyType=\"next\"/>          \n    </View>\n    {password.length > 7 ? (<Requirement>✓</Requirement>) : (<Requirement>password required minimum of 8 characters</Requirement>)}\n               <TouchableOpacity onPress={showPassword}>\n                  <Octicons\n                    name={hidePassword === true ? 'eye-closed' : 'eye'}\n                    size={20}\n                    style={styles.eyeIcon}\n                  />\n                </TouchableOpacity>\n            <ButtonWrap> \n            {error && (<Requirement>{error}</Requirement>)}\n            <ActionBtn \n             onPress={(onFormSubmit)}\n             type=\"submit\"><ActionBtnTxt>join now</ActionBtnTxt></ActionBtn>\n             <AlternativeBtn \n             onPress={() => navigation.navigate('Log in')}\n             type=\"submit\"><AlternativeBtnTxt>Log in here</AlternativeBtnTxt></AlternativeBtn>\n   </ButtonWrap>    \n\n    </View>\n    </ScrollView>\n     <View style={{ height:60 }} />\n    </KeyboardAvoidingView>\n  );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      backgroundColor: '#BE284C',\n      alignItems: 'center',\n      justifyContent: 'center',\n      \n    },\n    lockIcon: {\n      color: 'white',\n      zIndex: 1,\n      position: 'absolute',\n      left: 20,\n      bottom: 20,\n    },\n    emailIcon: {\n      color: 'white',\n      zIndex: 1,\n      position: 'absolute',\n      left: 20,\n      bottom: 75,\n    },\n    userIcon: {\n      color: 'white',\n      zIndex: 1,\n      position: 'absolute',\n      left: 20,\n      bottom: 135,\n    },\n    eyeIcon: {\n      color: 'white',\n      zIndex: 1,\n      position: 'absolute',\n      left: 135,\n      bottom: 35,\n    },\n    doneIcon: {\n      color: 'white',\n      zIndex: 1,\n\n    },\n  });\n  \n","import React from \"react\";\nimport { View, StyleSheet, ImageBackground} from 'react-native';\nimport { useSelector } from \"react-redux\";\nimport styled from 'styled-components/native';\nimport { formatRelative } from 'date-fns';\nexport const ProfileCard = ({navigation}) => {\n    const userName = useSelector((store) => store.user.username)\n    const userCreated = useSelector((store) => store.user.userCreatedAt)\n    const date = formatRelative(new Date(userCreated), new Date(userCreated));\n\n  return (\n    <View style={styles.container}>\n      <Card> \n      <ProfileWrap>\n        <TextWrap>\n          <Text>Welcome,</Text>\n          <StyledText>{userName}</StyledText>\n          <Line />\n          <Member> Member since {date} </Member>\n        </TextWrap>\n      </ProfileWrap>\n      </Card> \n    </View>\n  )\n}\n\n\n\nconst Text = styled.Text`\ncolor: #F4F2F2;\nfont-size: 32px;\ntext-transform: capitalize;\nfont-weight: 300;\n`\nconst StyledText = styled.Text`\ncolor: #F4F2F2;\nfont-size: 32px;\nfont-style: italic;\nfont-family: 'Times New Roman';\ntext-transform: capitalize;\n`\nconst Member = styled.Text`\nfont-size: 12px;\ntext-transform: uppercase;\ncolor: #F4F2F2;\npadding-top: 4px;\n`\nconst Card = styled.ImageBackground`\nheight: 270px;\ndisplay: flex;\nbackground-color: #BE284C;\n`\nconst ProfileWrap = styled.View`\ntop: 170px;\nalign-items: center;\n`\nconst TextWrap = styled.View`\nwidth: 80%;\nmargin-top: -10%;\n`\nconst Line = styled.View`\nborder: 1px solid #F4F2F2;\n`\n\nconst styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      backgroundColor: '#F4F2F2',\n    },\n  });\n  \n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { StatusBar } from 'expo-status-bar';\nimport { View, StyleSheet } from 'react-native';\nimport styled from 'styled-components/native';\nimport { API_URL } from \"../utils/utils.js\";\nimport user from '../reducers/user.js';\nimport { ProfileCard } from \"../components/ProfileCard.js\";\nimport { Octicons } from '@expo/vector-icons'; \nimport { ActionBtn, ActionBtnTxt } from \"../components/ButtonStyles.js\";\n\nexport const StartPage = ({navigation}) => {\n  const [profile, setProfile] = useState([\"\"]);\n  const dispatch = useDispatch();\n  \n  const accessToken = useSelector((store) => store.user.accessToken);\n  useEffect(() => {\n      if (!accessToken) {navigation.navigate('Log in')}\n  }, [accessToken])\n\n  useEffect(() => {\n    const options = {\n        method: \"GET\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n            \"Authorization\": accessToken\n        }\n    } \n    fetch(API_URL('profile'), options)\n        .then(res => res.json())\n        .then((response) => {\n          setProfile(response)\n        })\n}, []);\n\n\n\n  return (\n    <View style={styles.container}>\n      <ProfileCard/> \n      <ButtonWrap>\n      <StartBtn onPress={() => navigation.navigate('GamePage')}><BtnTxt>start the game</BtnTxt></StartBtn>\n      </ButtonWrap>\n      <SignOutBtn onPress={() => {navigation.navigate('Log in'); dispatch(user.actions.setAccessToken(null));}}> \n              <Octicons name=\"sign-out\" size={30} color=\"white\"></Octicons> \n      </SignOutBtn>\n\n      <StatusBar style=\"auto\" />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      backgroundColor: '#F4F2F2',\n    },\n  });\n  \nconst StartBtn = styled(ActionBtn)`\nbackground-color: #BE284C;\nplace-items: center;\n\n`\nconst BtnTxt = styled(ActionBtnTxt)`\ntext-align: center;\ncolor: #F4F2F2;\n`\nconst ButtonWrap = styled.View`\n      align-items: center;\n      top: -40%;\n`\nconst SignOutBtn = styled.TouchableOpacity`\nposition: absolute;\nright: 10%;\ntop: 5%;\n`","import React, {useEffect, useState} from 'react';\nimport Swiper from 'react-native-deck-swiper'\nimport styled from 'styled-components/native'\nimport { View, StyleSheet } from 'react-native';\nimport { API_URL } from \"../utils/utils.js\";\n\nexport const GamePage = () => {\n  const [statements, setStatement] = useState([\"\"]);\n  const fetchStatements = () => {\n   fetch(API_URL('statements'))  \n  .then((res) => res.json())\n  .then((data) => {\n    setStatement(data.body)\n  })\n  .catch((error) => error)\n}\n\n  useEffect(() => {\n    fetchStatements()\n    },[]);\n\nreturn (\n<View style={styles.container}>\n        <Swiper \n            cards={statements} \n            cardIndex={0}\n            infinite={false}\n            showSecondCard={true}\n            backgroundColor={'#BE284C'}\n            disableBottomSwipe={true}\n            disableTopSwipe={true}\n            stackSize={3}\n            animateCardOpacity={false}\n            stackAnimationFriction={7}\n            renderCard={(card)=> {\n              return (\n                <View style={styles.wrap}>\n                <CardStyle style={styles.card}>\n                    <Text style={styles.text}>{card.statement} </Text>\n                    <BrandText>Get closer with gripp</BrandText>\n                </CardStyle>\n                </View>\n              )\n          }}>\n        </Swiper>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      backgroundColor: '#BE284C',\n      alignItems: 'center',\n      justifyContent: 'center',\n\n    },\n    wrap: {\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n}); \n\nconst Text = styled.Text`\ncolor: #242424;\npadding: 40px;\nfont-size: 28px;\ntext-transform: uppercase;\nfont-weight: 300;\n`\n\nconst BrandText = styled.Text`\ncolor: #BE284C;\nfont-size: 18px;\nfont-weight: 600;\ntext-transform: uppercase;\ntext-align: center;\nposition: absolute;\nleft: 15%;\nbottom: 20px;\n`\n\nconst CardStyle = styled.View`\nwidth: 330px;\nheight: 480px;\nbackground-color: #F4F2F2;\nborder: 0.3px solid #7b1930; \nborder-radius: 26px; \nmargin-top: 5%;\n`\n\n","import * as React  from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { Provider } from 'react-redux';\nimport { combineReducers, configureStore } from '@reduxjs/toolkit';\nimport user from './reducers/user';\nimport { Welcome } from './screens/Welcome';\nimport { LogIn } from './screens/LogIn';\nimport { Register } from './screens/Register';\nimport { StartPage } from './screens/StartPage';\nimport { GamePage } from './screens/GamePage';\n\nconst Stack = createNativeStackNavigator();\n\nconst reducer = combineReducers({\n  user: user.reducer\n});\nconst store = configureStore({reducer});\nconst App = () => {\n  return (\n    <Provider store={store}>\n    <NavigationContainer>\n   <Stack.Navigator \n      screenOptions={{\n        headerStyle: {\n          backgroundColor: '#411a23',\n          borderBottomWidth: 0,\n          height: 0,\n        },\n        headerTintColor: '#fff',\n        headerTitleStyle: {\n          fontWeight: 'bold',\n        },\n      }}\n    >\n    <Stack.Screen name=\"Start\" component={Welcome} options={{ title: '',  headerStyle: {backgroundColor: '#411a23', borderBottomWidth: 0}}} /> \n    <Stack.Screen name=\"Log in\" component={LogIn} options={{ title: '',  headerStyle: {backgroundColor: '#7b1930', borderBottomWidth: 0}}} />  \n    <Stack.Screen name=\"Register\" component={Register} options={{ title: '' , headerStyle: {backgroundColor: '#BE284C', borderBottomWidth: 0}}} />    \n    <Stack.Screen name=\"StartPage\" component={StartPage} options={{ title: '', headerStyle: {backgroundColor: '#BE284C', borderBottomWidth: 0}}}/>       \n    <Stack.Screen name=\"GamePage\" component={GamePage} options={{ title: '', headerStyle: {backgroundColor: '#BE284C', borderBottomWidth: 0}}}/> \n    </Stack.Navigator>\n    </NavigationContainer>\n    </Provider>\n  );\n}\n\nexport default App;\n\n","module.exports = __webpack_public_path__ + \"static/media/front.ec6e51a8.png\";"],"sourceRoot":""}